[
  {
    "objectID": "posts/pbi-tuto-executive-summary-finance-report.html",
    "href": "posts/pbi-tuto-executive-summary-finance-report.html",
    "title": "Build Excecutive Summary - Finance Report",
    "section": "",
    "text": "Welcome to Business Intelligence world with Power BI!\nIn this post, I will guide you through building an executive summary finance report using Power BI.",
    "crumbs": [
      "📝Posts",
      "🧪 **Power BI Dashboard/Report**",
      "1. Financial Dashboard"
    ]
  },
  {
    "objectID": "posts/pbi-tuto-executive-summary-finance-report.html#use-case-description",
    "href": "posts/pbi-tuto-executive-summary-finance-report.html#use-case-description",
    "title": "Build Excecutive Summary - Finance Report",
    "section": "Use Case Description",
    "text": "Use Case Description\n\nOur dataset is a sample financical dataset from Power BI Desktop.\nOur objective is to create a Power BI report that helps executives answer the following three questions:\n\nWhich month and year had the highest profit?\nWhere is the company experiencing the most success (by country/region)?\nWhich product and segment should the company continue investing in?",
    "crumbs": [
      "📝Posts",
      "🧪 **Power BI Dashboard/Report**",
      "1. Financial Dashboard"
    ]
  },
  {
    "objectID": "posts/pbi-tuto-executive-summary-finance-report.html#how-to-guide",
    "href": "posts/pbi-tuto-executive-summary-finance-report.html#how-to-guide",
    "title": "Build Excecutive Summary - Finance Report",
    "section": "How-to Guide",
    "text": "How-to Guide\nOur development process involves the following steps:\n- Data preparation\n\nData loading\nData transformation\n\nConvert the data type of “Units Sold” to Whole Number.\nChange the ext format of “Segment” to UPPERCASE.\nRename “Month Name” to “Month”.\nRemove the “Montana” product from “Product” as it was discontinued last month.\n\n\n- Data modeling\n\nWrite two DAX formulas for measures and tables.\n\n- Report building\n\nVisual #1: Add a title.\nVisual #2: Line graph for Profit by Date.\nVisual #3: Map visualisation for Profit by Country/Region.\nVisual #4: Bar graph for Sales by Product and Segment.\nVisual #5: Time slider for Year.\n\n- Report Publishing\n\nPublish our report from Power BI Desktop to Power BI service to share.\n\nTo give you a hands-on practice of this use case, please following my step-by-step tutorial video to perform all the above steps:",
    "crumbs": [
      "📝Posts",
      "🧪 **Power BI Dashboard/Report**",
      "1. Financial Dashboard"
    ]
  },
  {
    "objectID": "posts/pbi-tuto-executive-summary-finance-report.html#final-result",
    "href": "posts/pbi-tuto-executive-summary-finance-report.html#final-result",
    "title": "Build Excecutive Summary - Finance Report",
    "section": "Final result",
    "text": "Final result\nIn summary, the final Executive Summary - Finance Report should look like this:\n\n\n\nThis report enables executives to address the following questions:\n- Which month and year had the highest profit?\n- December 2014.\n- In which country/region the company experiencing the most success?\n- In Europe, specifically France and Germany.\n- Which product and segment should the company continue to invest in?\n- The company should continue to invest in the Paseo product, focusing on the Small Business and Government segments.",
    "crumbs": [
      "📝Posts",
      "🧪 **Power BI Dashboard/Report**",
      "1. Financial Dashboard"
    ]
  },
  {
    "objectID": "posts/pbi-tuto-executive-summary-finance-report.html#reference",
    "href": "posts/pbi-tuto-executive-summary-finance-report.html#reference",
    "title": "Build Excecutive Summary - Finance Report",
    "section": "Reference",
    "text": "Reference\n\n[1] https://learn.microsoft.com/en-us/power-bi/create-reports/desktop-excel-stunning-report",
    "crumbs": [
      "📝Posts",
      "🧪 **Power BI Dashboard/Report**",
      "1. Financial Dashboard"
    ]
  },
  {
    "objectID": "posts/drill_through_page.html",
    "href": "posts/drill_through_page.html",
    "title": "Improving Power BI Reports with Drill-through Pages",
    "section": "",
    "text": "Hello!\nIn this post, I will introduce how to enhance Power BI reports by using drill-through fields to filter detailed reports, providing deeper insights. Additionally, I will demonstrate how to visualize changes over time using the Play Axis feature, which offers engaging and dynamic data insights.",
    "crumbs": [
      "📝Posts",
      "🧪 **Power BI Dashboard/Report**",
      "2. Reports with Drill-through Pages"
    ]
  },
  {
    "objectID": "posts/drill_through_page.html#use-case-description",
    "href": "posts/drill_through_page.html#use-case-description",
    "title": "Improving Power BI Reports with Drill-through Pages",
    "section": "Use-case description",
    "text": "Use-case description\nOur dataset is a sample financial dataset in Power BI Desktop. Our goal is to create a report on the expenditures of Wake County Watchdog, with a focus on the fiscal year 2019. The report consists of two pages:\nGeneral Report (Page 1)\nThis page provides an overview of expenditures across different funds and departments. It addresses the following questions:\n\nWhat is the comparison between Actual Amount and Budgeted Amount by Fund Name?\nWhich departments exceeded their budget, and which did not?\nWhat is the total amount over budget?\n\nDetailed Drill-through Report (Page 2)\nThis page focuses on detailed expenditure reports for a selected department, allowing exploration by sub-categories based on the hierarchy: Department -&gt; Division -&gt; Cost Center. It answers questions such as:\n\nHow is expenditure distributed by department, division, and cost center over time?\nHow does the amount over budget change over time by cost center?",
    "crumbs": [
      "📝Posts",
      "🧪 **Power BI Dashboard/Report**",
      "2. Reports with Drill-through Pages"
    ]
  },
  {
    "objectID": "posts/drill_through_page.html#development-process",
    "href": "posts/drill_through_page.html#development-process",
    "title": "Improving Power BI Reports with Drill-through Pages",
    "section": "Development Process",
    "text": "Development Process\nOur development process follows these key steps:\n\nData Loading\n\nImport the sample financial dataset into Power BI Desktop.\n\n\n\nData Modeling\n\nCreate and verify the hierarchy (Department -&gt; Division -&gt; Cost Center).\nDevelop DAX formulas to calculate key measures:\n\nAmount Over Budget = SUM(Expenditures[Actual Amount]) - SUM(Expenditures[Budgeted Amount])\nIs Over Budget = (SUM(Expenditures[Actual Amount]) - SUM(Expenditures[Budgeted Amount])) &gt; 0\nNumber of Expenditures = COUNT(Expenditures[Check Number])\n\n\n\n\nReport Building\nPage 1: General Report\n\nAdd a title.\nVisual #1: Clustered bar chart showing Actual Amount and Budgeted Amount by Fund Name.\nVisual #2: Table listing departments over/under budget.\nVisual #3: Card visual displaying the total amount over budget.\nApply a filter to display data for fiscal year 2019.\nAdd lines to separate sections of the report.\n\nPage 2: Drill-through Detailed Report\n\nAdd a title.\nVisual #4: Line chart showing Actual Amount over time.\nVisual #5: Treemap visualizing Actual Amount by Division and Cost Center. Add a drill-through dimension to this page.\nVisual #6: Scatter chart with a Play Axis to visualize Expenditures by Cost Center over time (Year and Month).\n\n\n\nReport Publishing\n\nPublish the report from Power BI Desktop to the Power BI Service for sharing and collaboration.\n\nTo practice this use case hands-on, follow my step-by-step tutorial video to complete the outlined steps.",
    "crumbs": [
      "📝Posts",
      "🧪 **Power BI Dashboard/Report**",
      "2. Reports with Drill-through Pages"
    ]
  },
  {
    "objectID": "posts/drill_through_page.html#final-result",
    "href": "posts/drill_through_page.html#final-result",
    "title": "Improving Power BI Reports with Drill-through Pages",
    "section": "Final result",
    "text": "Final result\nThe resulting report on Wake County Watchdog’s expenditures will contain two pages.\nThe first page Over Budget should be like this:\n\n\n\nThe drill-through page will be accessible through a selected dimension from the first page.\n\n\n\nKey Insights for Executives:\n\nTotal Expenditure Over Budget (Fiscal Year 2019): $108.36M\nActual Expenditure for Fire 800MHZ on September 4, 2018: $126,578\nNumber of Over-Budget Expenditures for Facilities Design and Construction (November 2018): 41",
    "crumbs": [
      "📝Posts",
      "🧪 **Power BI Dashboard/Report**",
      "2. Reports with Drill-through Pages"
    ]
  },
  {
    "objectID": "posts/drill_through_page.html#reference",
    "href": "posts/drill_through_page.html#reference",
    "title": "Improving Power BI Reports with Drill-through Pages",
    "section": "Reference",
    "text": "Reference\n[1] https://app.datacamp.com/learn/courses/reports-in-power-bi",
    "crumbs": [
      "📝Posts",
      "🧪 **Power BI Dashboard/Report**",
      "2. Reports with Drill-through Pages"
    ]
  },
  {
    "objectID": "posts/create_dashboard_by-databricks_AIBI.html",
    "href": "posts/create_dashboard_by-databricks_AIBI.html",
    "title": "Create A Dashboard By Databricks AI/BI",
    "section": "",
    "text": "Hi there,\nIn this guide, I will walk you through how to use a sample dataset to build a dashboard and extract insights using the AI/BI dashboard UI on Azure Databricks"
  },
  {
    "objectID": "posts/create_dashboard_by-databricks_AIBI.html#prerequisites",
    "href": "posts/create_dashboard_by-databricks_AIBI.html#prerequisites",
    "title": "Create A Dashboard By Databricks AI/BI",
    "section": "Prerequisites",
    "text": "Prerequisites\n\nYou are logged into a Azure Databricks workspace.\nYou have the SQL entitlement in that workspace.\nYou have at least CAN USE access to one or more SQL warehouses."
  },
  {
    "objectID": "posts/create_dashboard_by-databricks_AIBI.html#how-to-guide",
    "href": "posts/create_dashboard_by-databricks_AIBI.html#how-to-guide",
    "title": "Create A Dashboard By Databricks AI/BI",
    "section": "How-to Guide",
    "text": "How-to Guide\nStep 1. Create a dashboard\n\nIn your Azure Databricks workspace, click on Dashboard, then click Create Dashboard.\n\n\n\n\n\nBy default, the new dashboard is automatically named using its creation timestamp and stored in your /Workspace/Users/ directory.\nRename the dashboard and the page as needed.\n\n\n\n\n\nUse the Canvas tab to create and edit widgets such as visualizations, text boxes, and filters.\nUse the Data tab to define the underlying datasets for your dashboard.\n\n\n\n\nStep 2. Define datasets\n\nClick the Data tab.\nClick Create from SQL\nPaste the following query into the editor. Then click Run to return a collection of records.\n\nSELECT\n  T.tpep_pickup_datetime,\n  T.tpep_dropoff_datetime,\n  T.fare_amount,\n  T.pickup_zip,\n  T.dropoff_zip,\n  T.trip_distance,\n  T.weekday,\n  CASE\n    WHEN T.weekday = 1 THEN 'Sunday'\n    WHEN T.weekday = 2 THEN 'Monday'\n    WHEN T.weekday = 3 THEN 'Tuesday'\n    WHEN T.weekday = 4 THEN 'Wednesday'\n    WHEN T.weekday = 5 THEN 'Thursday'\n    WHEN T.weekday = 6 THEN 'Friday'\n    WHEN T.weekday = 7 THEN 'Saturday'\n    ELSE 'N/A'\n  END AS day_of_week\nFROM\n(\n  SELECT\n    dayofweek(tpep_pickup_datetime) as weekday,\n    *\n  FROM\n    `samples`.nyctaxi.trips\n  WHERE\n    trip_distance &gt; 0\n    AND trip_distance &lt; 10\n    AND fare_amount &gt; 0\n    AND fare_amount &lt; 50\n) T\nORDER BY\n  T.weekday\n\nSelect the server for running\nClick Run. The results will appear below the editor once the query is executed.\nRename the dataset. By default, it is saved as Untitled dataset. Double-click the title to rename it to Taxicab Data.\n\n\n\n\nStep 3. Create and place a visualization\n\nReturn to the Canvas tab.\nClick Add a Visualization to create a new visualization widget.\nUse your mouse to position the widget on the canvas.\n\n\n\n\nStep 4. Configure the visualization\n\nSelect the visualization widget.\nUse the configuration panel on the right to configure the data. The previously created dataset is automatically selected.\nSelect Bar Chart as the visualization type.\n\nX-Axis Configuration:\n\nSelect tpep_dropoff_datetime as the X-axis.\nClick the field to access additional options: o Scale Type: Select Temporal. o Transform: Choose HOURLY.\n\nY-Axis Configuration:\n\nSelect fare_amount as the Y-axis.\nClick the field to access additional options: o Scale Type: Select Quantitative. o Transform: Choose AVG.\n\n\n\n\nOptional: Use Databricks Assistant\n\nYou can create visualizations using natural language with Databricks Assistant.\nClick Create a Visualization. A prompt will appear with the text: Describe a chart…\n\n\n\n\n\nType a prompt, for example: Create a bar chart of average fare amount over hourly drop-off time.\n\n\n\n\n\nPress Enter and click Accept if you are satisfied with the visualization.\nTo edit, click the Assistant icon, type a new prompt, or modify the existing chart (e.g., Switch to a line chart).\n\n\n\n\nStep 5. Clone and modify a visualization\n\nRight-click on an existing visualization and select Clone.\nSet the X-axis field to tpep_pickup_datetime.\nKeep the transform type as HOURLY.\nChoose a new color for the cloned chart.\n\n\n\n\nStep 6. Create a scatter chart\n\nClick Create a Visualization to add a new widget.\nConfigure the chart as follows: o Dataset: Taxicab Data o Visualization: Scatter o X-axis: trip_distance o Y-axis: fare_amount o Color/Group by: day_of_week\n\n\n\n\nStep 7. Create dashboard filters\nThe filter helps your dashboard become more interactive\n- Create a Date Range Filter: 1. Click the Filter icon to add a filter widget to the canvas. 2. In the configuration panel, select Date range picker from the dropdown. 3. Check the Title box, rename the filter to Date Range. 4. Select Taxicab_data.tpep_pickup_datetime as the field.\n- Create a Dropdown Filter: 1. Click the Filter icon again to add another filter. 2. Select Dropdown (single-value). 3. Check the Title box and rename it to Dropoff Zip Code. 4. Select Taxicab_data.dropoff_zip as the field.\n- Clone a Filter: 1. Right-click the Dropoff Zip Code filter and select Clone. 2. Remove the existing field by clicking the remove icon. 3. Select Taxicab_data.pickup_zip to filter by pickup zip code.\n\n\n\nStep 8. Resize and arrange charts and filters\nArrange and resize your visualizations and filters to optimize the layout.\n\n\n\nStep 9. Publish and share\n1.  Your dashboard is saved as a draft. To create a final version, click **Publish**.\n2.  Review the list of people with access, then click **Publish**. Users and groups with at least **CAN VIEW** permission will be able to see the dashboard."
  },
  {
    "objectID": "posts/create_dashboard_by-databricks_AIBI.html#result",
    "href": "posts/create_dashboard_by-databricks_AIBI.html#result",
    "title": "Create A Dashboard By Databricks AI/BI",
    "section": "Result",
    "text": "Result\nClick on Dashboard on the left sidebar of Databricks to verify the your dashboard published successfully\n\n\n\n3.  Follow the link in the notification to view the published dashboard.\nSharing the Dashboard: - To update the list of users or groups, return to the draft dashboard and click Share. - Add users or groups and set appropriate permission levels.\nTo give you a hands-on practice of this use case, please following my step-by-step tutorial video to perform all the above steps:"
  },
  {
    "objectID": "posts/create_dashboard_by-databricks_AIBI.html#reference",
    "href": "posts/create_dashboard_by-databricks_AIBI.html#reference",
    "title": "Create A Dashboard By Databricks AI/BI",
    "section": "Reference",
    "text": "Reference\nhttps://learn.microsoft.com/en-us/azure/databricks/dashboards/tutorials/create-dashboard"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Hi, I’m Phuong. I am a Data Analyst and Data/AI Consultant. I live and work in Paris, France.\nI have over six years of experience in data analysis and business intelligence. My skills include Python, R, SQL, Power BI, and Tableau, as well as cloud services such as Azure, GCP, AWS, Databricks."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "✨ Data Analysis, Business Intelligence",
    "section": "",
    "text": "Create A Dashboard By Databricks AI/BI\n\n\nBuilding a AI/BI Dashboard on Azure Databricks\n\n\n\nAI/BI dashboard\n\n\nBusiness intelligence\n\n\nVisualisation\n\n\n\n\n\n\nDec 30, 2024\n\n\n5 min\n\n\n\n\n\n\n\n\n\n\n\n\nCreate Sample Azure SQL Server and Database\n\n\nHow to create a single database and server in Azure SQL Database\n\n\n\nAzure\n\n\nSQL Database\n\n\nServer\n\n\nSingle Database\n\n\n\n\n\n\nDec 29, 2024\n\n\n2 min\n\n\n\n\n\n\n\n\n\n\n\n\nGet CSV Tables Into Databricks\n\n\nUploading one or many csv table into your Databricks work space\n\n\n\nDatabricks\n\n\nGet Csv File\n\n\nMicrosoft Azure\n\n\n\n\n\n\nDec 28, 2024\n\n\n1 min\n\n\n\n\n\n\n\n\n\n\n\n\nImproving Power BI Reports with Drill-through Pages\n\n\nMastering Power BI with Finance Report Use-case and Drill-through page\n\n\n\nPower BI\n\n\nReport\n\n\nDrill-through Pages\n\n\nHierarchy\n\n\nChanges Over Time\n\n\n\n\n\n\nDec 27, 2024\n\n\n3 min\n\n\n\n\n\n\n\n\n\n\n\n\nBuild Excecutive Summary - Finance Report\n\n\nMastering Power BI with Excutive Summary - Finance Report Use-case\n\n\n\nPower BI\n\n\nReport\n\n\nDashboard\n\n\nFinance\n\n\nExecutive Summary\n\n\n\n\n\n\nDec 23, 2024\n\n\n2 min\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/create_sample_azure_SQL_server_database.html",
    "href": "posts/create_sample_azure_SQL_server_database.html",
    "title": "Create Sample Azure SQL Server and Database",
    "section": "",
    "text": "Hi there,\nIn this guide, I will walk you through the process of creating a single database in Azure SQL Database. Once created, you can query the database using the Query Editor in the Azure portal.",
    "crumbs": [
      "📝Posts",
      "🔗 **Databricks**",
      "2. Create Sample Azure SQL Server and Database"
    ]
  },
  {
    "objectID": "posts/create_sample_azure_SQL_server_database.html#prerequisites",
    "href": "posts/create_sample_azure_SQL_server_database.html#prerequisites",
    "title": "Create Sample Azure SQL Server and Database",
    "section": "Prerequisites",
    "text": "Prerequisites\nTo complete this task, you must have an active Azure subscription. If you do not have one yet, you can create a free account by following this link: Azure Free Account",
    "crumbs": [
      "📝Posts",
      "🔗 **Databricks**",
      "2. Create Sample Azure SQL Server and Database"
    ]
  },
  {
    "objectID": "posts/create_sample_azure_SQL_server_database.html#creating-a-single-azure-sql-database",
    "href": "posts/create_sample_azure_SQL_server_database.html#creating-a-single-azure-sql-database",
    "title": "Create Sample Azure SQL Server and Database",
    "section": "Creating a Single Azure SQL Database",
    "text": "Creating a Single Azure SQL Database\nStep 1: Access Azure SQL Databases\n\nGo to the Microsoft Azure Portal\nOn the homepage, click on the SQL Databases icon.\n\n\n\n\nStep 2: Create a New SQL Database\n\nOn the SQL Databases page, click Create SQL Database.\n\n\n\n\nStep 3: Configure Database Settings\nBasics Tab:\n\nSelect the desired Azure Subscription.\nFor the Resource group, click Create new, enter a name, and click OK.\nEnter the Database name (requirements: maximum 128 characters, no reserved words, and no existing database with the same name on the server).\nFor Server, select Create new and proceed as follows:\n\n\n\n\no Enter a Server name (Azure will notify you if the name is available). o Select the Location from the dropdown list. o For Authentication method, choose SQL Authentication.  Create a Server Admin Login.  Set a password.  Click OK.\n\n\n\nWorkload Environment\n\nUnder Workload environment, select either Development or Production. Note that the fees differ significantly between these options.\nClick Next to proceed to the Networking tab\n\n\n\n\nNetworking Tab\n\nChoose the connectivity method (e.g., Public endpoint).\nUnder Firewall rules, enable: o Allow Azure services and resources to access this server. o Add current client IP address.\n\n\n\n\nAdditional Settings Tab\n\nIn the Data source section, select Sample.\nClick OK.\n\n\n\n\nStep 4: Review and Create\n\nReview all information in the Tags and Review + create tabs.\nClick Create to finalize the database creation.",
    "crumbs": [
      "📝Posts",
      "🔗 **Databricks**",
      "2. Create Sample Azure SQL Server and Database"
    ]
  },
  {
    "objectID": "posts/create_sample_azure_SQL_server_database.html#final-result",
    "href": "posts/create_sample_azure_SQL_server_database.html#final-result",
    "title": "Create Sample Azure SQL Server and Database",
    "section": "Final Result",
    "text": "Final Result\nYou have successfully created a sample Azure SQL Database. You can now query and manage your database directly from the Azure portal\n\n\n\nTo give you a hands-on practice of this use case, please following my step-by-step tutorial video to perform all the above steps:",
    "crumbs": [
      "📝Posts",
      "🔗 **Databricks**",
      "2. Create Sample Azure SQL Server and Database"
    ]
  },
  {
    "objectID": "posts/create_sample_azure_SQL_server_database.html#reference",
    "href": "posts/create_sample_azure_SQL_server_database.html#reference",
    "title": "Create Sample Azure SQL Server and Database",
    "section": "Reference",
    "text": "Reference\nhttps://learn.microsoft.com/en-us/azure/azure-sql/database",
    "crumbs": [
      "📝Posts",
      "🔗 **Databricks**",
      "2. Create Sample Azure SQL Server and Database"
    ]
  },
  {
    "objectID": "posts/get_csv_tables_into_databricks.html",
    "href": "posts/get_csv_tables_into_databricks.html",
    "title": "Get CSV Tables Into Databricks",
    "section": "",
    "text": "How to upload a table into your Databricks work space in Microsoft Azure\nHello,\nThis post give a quick through of creating a table in Azure Databricks work space.",
    "crumbs": [
      "📝Posts",
      "🔗 **Databricks**",
      "1. Get CSV Tables into Databricks"
    ]
  },
  {
    "objectID": "posts/get_csv_tables_into_databricks.html#prerequisite",
    "href": "posts/get_csv_tables_into_databricks.html#prerequisite",
    "title": "Get CSV Tables Into Databricks",
    "section": "Prerequisite:",
    "text": "Prerequisite:\nIn order to perform the task, you must have an Azure Databricks account. If you have not had that, go to create an Azure account, then subscribe Databricks to create an Databricks work space",
    "crumbs": [
      "📝Posts",
      "🔗 **Databricks**",
      "1. Get CSV Tables into Databricks"
    ]
  },
  {
    "objectID": "posts/get_csv_tables_into_databricks.html#create-your-first-table",
    "href": "posts/get_csv_tables_into_databricks.html#create-your-first-table",
    "title": "Get CSV Tables Into Databricks",
    "section": "Create your first table",
    "text": "Create your first table\nStep 1. Launch your work space Databricks\n\n\n\nStep 2. In the sidebar, click + New to Add or Upload data\n\n\n\nStep 3. Click on Create and modify table\n\n\n\nStep 4. Drop files into the frame or click on browse to upload the files (Maximum 10 files and total upload size of 2GB)\n\n\n\nStep 5. After files are uploaded, verify then click on Create Table",
    "crumbs": [
      "📝Posts",
      "🔗 **Databricks**",
      "1. Get CSV Tables into Databricks"
    ]
  },
  {
    "objectID": "posts/get_csv_tables_into_databricks.html#final-result",
    "href": "posts/get_csv_tables_into_databricks.html#final-result",
    "title": "Get CSV Tables Into Databricks",
    "section": "Final result",
    "text": "Final result\nHere is the table successfully uploaded on the Databrick work space\n\n\n\nTo give you a hands-on practice of this work, please following my step-by-step tutorial video to perform all the above steps:",
    "crumbs": [
      "📝Posts",
      "🔗 **Databricks**",
      "1. Get CSV Tables into Databricks"
    ]
  },
  {
    "objectID": "posts/get_csv_tables_into_databricks.html#reference",
    "href": "posts/get_csv_tables_into_databricks.html#reference",
    "title": "Get CSV Tables Into Databricks",
    "section": "Reference",
    "text": "Reference\n[1] https://learn.microsoft.com",
    "crumbs": [
      "📝Posts",
      "🔗 **Databricks**",
      "1. Get CSV Tables into Databricks"
    ]
  }
]